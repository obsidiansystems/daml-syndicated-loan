module Tests.Common where

import Daml.Script

import Daml.Finance.Interface.Account.Factory qualified as Account (F)
import Daml.Finance.Interface.Holding.Factory qualified as Holding (F)
import Daml.Finance.Interface.Types.Common.Types

import Scripts.Origination
import Scripts.Origination.Settlement
import Scripts.PreOrigination
import Scripts.Parties

data Config = Config with
  instrument : InstrumentKey
  accountFactoryCid : ContractId Account.F
  holdingFactoryCid : ContractId Holding.F

-- | Test that does not exercise the lending workflow as such, but
-- exercises transfers on the ledger to help us estimate throughput
-- of our settlement strategy.
initialTest : LedgerParties -> Script ()
initialTest parties = do
  preOriginationResult <- preOrigination parties
  originationResult : Origination <- originate parties preOriginationResult
  _originationSettlement <- settleLoan parties preOriginationResult originationResult
  -- servicing parties originationData
  pure ()
