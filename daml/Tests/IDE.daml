module IDE where

import Common
import Daml.Script
import Daml.Finance.Interface.Types.Common.Types

<<<<<<< Updated upstream
createParties : Script LedgerParties
createParties = do
  borrower_alice <- allocateParty "Borrower_Alice"
  borrower_bob <- allocateParty "Borrower_Bob"
  agent_charlie <- allocateParty "Agent_Charlie"
  agent_debbie <- allocateParty "Agent_Debbie"
  underwriter_emma <- allocateParty "Underwriter_Emma"
  underwriter_fred <- allocateParty "Underwriter_Fred"
  lender_gary <- allocateParty "Lender_Gary"
  lender_hortense <- allocateParty "Lender_Hortense"
  fed_ingrid <- allocateParty "Fed_Ingrid"
  pure $ LedgerParties { .. }

initialTestLocal : Script ()
initialTestLocal = do
  parties <- createParties
  initialTest parties
=======
-- Pre-origination
preOrigination : Script ()
preOrigination = do
    -- Create the Fed
    fed <- allocateParty "Fed"
    
    -- Create USD
    let instrumentId = Id "USD"
        instrumentVersion = "0"
        usdInstrument = InstrumentKey with
          issuer = fed
          depository = fed
          id = instrumentId
          version = instrumentVersion

    -- Create some Banks
    boa <- allocateParty "BoA"
    chase <- allocateParty "Chase"

    -- Create some Companies

    -- Create USD Accounts for Banks and Companies
    return ()
>>>>>>> Stashed changes
