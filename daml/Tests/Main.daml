module Tests.Main where

import DA.Date (Month(..), date)
import DA.Time (time)
import Daml.Script

import Scripts.Origination
import Scripts.Origination.Settlement
import Scripts.Parties
import Scripts.PreOrigination
import Scripts.Settlement

runCreateParties : Script LedgerParties
runCreateParties = createParties

runPreOrigination : Script (LedgerParties, PreOrigination)
runPreOrigination = do
  parties <- runCreateParties
  preOrig <- preOrigination parties
  pure (parties, preOrig)

runOrigination : Script (LedgerParties, PreOrigination, Origination)
runOrigination = do
  (parties, preOrig) <- runPreOrigination
  orig <- originate parties preOrig
  pure (parties, preOrig, orig)

runServicing : Script ()
runServicing = do
  setTime (time (date 2023 Apr 12) 4 4 4)
  (p, po, o) <- runOrigination
  settleLoan p po o
  let agent = o.origLoanAgreement.loanAgreement.agent
      maxSteps = 50
  runBondSteps p po agent o.originationTime o.origLoanAgreementCid 1 maxSteps
