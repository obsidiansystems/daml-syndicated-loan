module Workflow.Origination where

import DA.Map (Map)
import qualified DA.Map as Map

-- | Borrowers may create and freely submit loan applications to agents. We do
-- not limit the ability to apply in any way.
template LoanApplication
  with
    borrower : Party
    agent : Party
    amount : Numeric 2
  where
    signatory borrower
    observer agent

template UnderwritingRequest
  with
    underwriter : Party
    loan : LoanApplication -- Do we want to consume the loan app or refer to it by cid? Preserving the contract lets the borrower refer to it (e.g., to check status). Consuming it makes it a little harder to track, maybe. Of course, we could make the buyer an observer. 
  where
    signatory loan.agent
    observer underwriter

template UnderwritingResult
  with
    underwriter : Party
    loan : LoanApplication -- Are we copying this around too much?
    result : Bool -- Separate into two contracts? --NOTE: This could be more of a report rather than True/False, so that lenders can apply their own independent judgment about whether the risk profile fits their specific risk tolerances
  where
    signatory underwriter
    observer loan.agent

template FundingRequest
  with
    agent : Party
    amount : Numeric 2
    participants : [Party] -- Should we use propose/accept to add these or just have the agent provide the list up front? Do we care if the agent produces multiple loan requests for a single loan application? --NOTE: I think this ought to be done one agent to one lender rather than in a batch, because, during the bookbuilding process, the agent may not want to reveal who has been solicited, especially if they said "no". --NOTE: Somehow this needs to be linked to the underwriting result.
  where
    signatory agent
    observer participants

template FundingInterest
  with
    participant : Party
    agent : Party
    amount : Numeric 2
    rate : Decimal
  where
    signatory participant
    observer agent

template LoanProposal
  with
    agent : Party
    borrower : Party
    amount : Numeric 2
    rate : Decimal
    -- other terms: term, fees, covenants, etc.
    --NOTE: Maybe a covenant, once agreed by the borrower, could actually grant access to some on-chain data in the future, which is necessary to enforce it. and this could also trigger on-chain modifications of the loan.
  where
    signatory agent
    observer borrower

template AcceptedLoan
  with
    agent : Party
    borrower : Party
    amount : Numeric 2
    rate : Decimal
  where
    signatory borrower
    observer agent

-- The final loan agreement should include all parties. The privacy barrier is dropped in this final step. In the bookbuilding process, no identities are revealed.
template LoanAgreement
  with
    agent : Party
    participantsWithAmount : Map Party (Numeric 2)
    borrower : Party
    amount : Numeric 2
    rate : Decimal
    -- other terms: term, fees, covenants, etc.
  where
    signatory agent, borrower, Map.keys participantsWithAmount

-- Need to provide some proof to P that A gave the loan amount to the same B that was underwritten. Can we do this without revealing B's identity?
